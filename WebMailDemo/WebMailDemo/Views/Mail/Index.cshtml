@model IEnumerable<MailFolder>
@{ ViewBag.Title = "WebMail"; }
<script src="/Scripts/knockout-1.3.0pre.js" type="text/javascript"></script>
<script src="/Scripts/knockout.address.js" type="text/javascript"></script>

<div class="leftColumn">
    <!-- Folders -->
    <ul class="folders" data-bind="foreach: folders">
        <li data-bind="text: $data,
                       css: { selected: $data == viewModel.selectedFolder() },
                       click: function() { viewModel.selectFolder($data) }"></li>
    </ul>   
</div>

<div class="rightColumn">
    <!-- Mails grid -->
    <table class="mails" data-bind="visible: !selectedMail()">
        <thead><tr><th>From</th><th>To</th><th>Subject</th><th>Date</th></tr></thead>
        <tbody data-bind="foreach: currentPageMails">
            <tr data-bind="click: function() { viewModel.selectedMailId(Id) }">
                <td data-bind="text: From"></td>
                <td data-bind="text: To"></td>
                <td data-bind="text: Subject"></td>
                <td data-bind="text: Date"></td>
            </tr>    
        </tbody>
    </table>

    <!-- Selected mail -->
    <div data-bind="with: selectedMail">
        <h1 data-bind="text: Subject"></h1>
        <div class="mailInfo">
            <p><label>From</label>: <span data-bind="text: From"></span></p>
            <p><label>To</label>: <span data-bind="text: To"></span></p>
            <p><label>Date</label>: <span data-bind="text: Date"></span></p>
        </div>
        <p data-bind="text: MessageContent"></p>
    </div>
</div>

<script type="text/javascript">
    var viewModel = {
        // Data
        folders: @Html.Raw(new JavaScriptSerializer().Serialize(Model.Select(x => x.Name))),
        currentPageMails: ko.observableArray([]),
        selectedFolder: ko.observable(),
        selectedMailId: ko.observable(),

        // Behaviours
        selectFolder: function (folder) {
            this.selectedFolder(folder);
            this.selectedMailId(null);
        }
    };

    ko.dependentObservable(function() {
        if (!this.selectedFolder())
            return;
        var mailsDataUrl = "@Url.Action("MailData")?folder=" + encodeURIComponent(this.selectedFolder());
        $.post(mailsDataUrl, this.currentPageMails); // Gets JSON from mailsDataUrl, and writes it to currentPageMails
    }, viewModel);

    viewModel.selectedMail = ko.dependentObservable(function() {
        var mailIdToFind = this.selectedMailId();
        return ko.utils.arrayFirst(this.currentPageMails(), function(item) { return item.Id == mailIdToFind })
    }, viewModel);

    ko.applyBindings(viewModel);
    ko.linkObservableToUrl(viewModel.selectedFolder, "folder", "Inbox");
    ko.linkObservableToUrl(viewModel.selectedMailId, "mailId");
</script>